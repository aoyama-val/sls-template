# serverless.ymlのリファレンス
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: aoyama-slstest1222

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ap-northeast-1
  logs:
    restApi: true  # API Gatewayの実行ログとアクセスログを有効にする
  logRetentionInDays: 30  # ログの保持期間。指定できる値が限られているので注意。https://qiita.com/koshilife/items/cca9b38ee999bd672da2
  environment:
    TZ: Asia/Tokyo
  memorySize: 2048
  timeout: 30

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"
# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  bye:
    description: GET /bye
    handler: bye/index.handler
    events:
      - http:
          path: bye
          method: get
          cors: true
  hello:
    description: GET /hello
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
          cors: true
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  # serverlessの値への参照はParametersで解決する。
  Parameters:
    LogRetentionInDays:
      Type: Number
      Default: 30
